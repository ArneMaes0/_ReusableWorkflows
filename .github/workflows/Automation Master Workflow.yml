name: Automation Master Workflow

# Controls when the workflow will run
on:
  # Allows you to run this workflow from another workflow
  workflow_call:
    outputs:
      quality_gate: 
        description: "Results from Skyline Quality Gate."
        value:  ${{ jobs.validate_skyline_quality_gate.outputs.quality}}
      #artifact-id-release: 
      artifact-id: 
        description: "Artifact ID of uploaded Package if successful."
        value:  ${{ jobs.artifact_creation_registration.outputs.artifact-id }}
      # artifact-id-development: 
      #   description: "Artifact ID of dev uploaded Package if successful."
    inputs:
      referenceName:
        required: true
        type: string       
      runNumber:
        required: true
        type: string   
      referenceType:
        required: true
        type: string   
      repository:
        required: true
        type: string 
      owner:
        required: true
        type: string
      sonarCloudProjectName:
        required: true
        type: string
    secrets:
      api-key:
        required: true
      sonarCloudToken:
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  check_solution_type:
      name: Check Visual Solution Project Types
      runs-on: windows-latest
      outputs:
        isSdk: ${{ steps.results.isSdk}}

      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v3
        # - uses: actions/setup-dotnet@v3
        #   with:
        #     dotnet-version: '3.1.x'

        - name: readDir
          run: dir   

        - name: Initialize
          run: |
            echo "workspace" ${{ github.workspace }}
            echo "ref name" ${{ inputs.referenceName }}
            echo "run number" ${{ inputs.runNumber }}
            echo "ref type" ${{ inputs.referenceType }}
            echo "repository" ${{ inputs.repository }}
            echo "sonarCloudProjectName" ${{ inputs.sonarCloudProjectName }}


        # - name: Install SDKChecker
        #   run: |
        #     dotnet tool install --tool-path .\.tools\SDKChecker Skyline.DataMiner.CICD.Tools.SDKChecker --version 1.0.1-Beta1

        # - name: Run Test Project Detector
        #   id: detect-unit-tests
        #   run: |
        #     echo "allLegacy=$(.\.tools\SDKChecker\SDKChecker.exe --workspace '${{ github.workspace }}')" >> $env:GITHUB_OUTPUT

        - name: Install SDKChecker
          run: |
            dotnet tool install Skyline.DataMiner.CICD.Tools.SDKChecker --version "1.0.1-Beta1" --global
          shell: pwsh

        - name: Run SDKChecker
          run: |
            $output = $(SDKChecker --workspace "${{ github.workspace }}")
            if ($output) {
              echo "isSdk=true" >> $env:GITHUB_OUTPUT
            } else {
              echo "isSdk=false" >> $env:GITHUB_OUTPUT
            }
          shell: pwsh
        # - name:  Run SDKChecker
        #   run: |
        #     output=$(SDKChecker --workspace "${{ github.workspace }}")
        #     if [[ -n "$output" ]]; 
        #     then
        #       echo "isSdk=$('true')" >> $env:GITHUB_OUTPUT
        #     else
        #       echo "isSdk=$('false')" >> $env:GITHUB_OUTPUT
        #     fi  
        #   shell: bash

  CI_Legacy:
    uses: SkylineCommunications/_ReusableWorkflows/.github/workflows/Automation Master Legacy Workflow.yml@DevNesting
    needs: check_solution_type
    if: needs.check_solution_type.outputs.isSdk == 'false'
    with:
      referenceName: ${{ github.ref_name }}
      runNumber: ${{ github.run_number }}
      referenceType: ${{ github.ref_type }}
      repository: ${{ github.repository }}
      owner: ${{ github.repository_owner }}
      sonarCloudProjectName: ${{ github.sonarCloudProjectName }}
    secrets:
      # The API-key: generated in the DCP Admin app (https://admin.dataminer.services/) as authentication for a certain DataMiner System.
      api-key: ${{ secrets.DATAMINER_DEPLOY_KEY }}
      sonarCloudToken: ${{ secrets.SONAR_TOKEN }}

  CI_SDK:
    uses: SkylineCommunications/_ReusableWorkflows/.github/workflows/Automation Master SDK Workflow.yml@DevNesting
    needs: check_solution_type
    if: needs.check_solution_type.outputs.isSdk == 'true'
    with:
      referenceName: ${{ github.ref_name }}
      runNumber: ${{ github.run_number }}
      referenceType: ${{ github.ref_type }}
      repository: ${{ github.repository }}
      owner: ${{ github.repository_owner }}
      sonarCloudProjectName: ${{ github.sonarCloudProjectName }}
    secrets:
      # The API-key: generated in the DCP Admin app (https://admin.dataminer.services/) as authentication for a certain DataMiner System.
      api-key: ${{ secrets.DATAMINER_DEPLOY_KEY }}
      sonarCloudToken: ${{ secrets.SONAR_TOKEN }}